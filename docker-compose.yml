services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: auth_user
      KC_DB_PASSWORD: auth_password
    command: start-dev
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy


  # Authentication Service
  auth-service:
    build: .
    environment:
      DATABASE_URL: postgresql://auth_user:auth_password@postgres:5432/auth_service
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: auth-service
      KEYCLOAK_CLIENT_ID: auth-service
      KEYCLOAK_CLIENT_SECRET: GHvWOp4hXOLMNVmkdliARo6ydtIdywtJ
      KEYCLOAK_ADMIN_USERNAME: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      JWT_ALGORITHM: RS256
      JWT_ISSUER: http://keycloak:8080/realms/auth-service
      DEBUG: "true"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    volumes:
      - .:/app
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        echo 'Waiting for Keycloak...' &&
        sleep 30 &&
        echo 'Running migrations...' &&
        alembic upgrade head &&
        echo 'Starting application...' &&
        python run.py
      "

volumes:
  postgres_data: 